    /**
     * 返回通过反转指定int值的二进制补码二进制表示中的位顺序而获得的值。
     * 例如数字987654321的二进制是0011 1010 1101 1110 0110 1000 1011 0001
     * 反转二进制位后是1000 1101 0001 0110 0111 1011 0101 1100
     *
     * @param i 要进行反转的int值
     * @return 返回反转二进制位后的数值
     */
    public static int reverse(int i) {
        i = (i & 0x55555555) << 1 | (i >>> 1) & 0x55555555;
        i = (i & 0x33333333) << 2 | (i >>> 2) & 0x33333333;
        i = (i & 0x0f0f0f0f) << 4 | (i >>> 4) & 0x0f0f0f0f;
        i = (i << 24) | ((i & 0xff00) << 8) |
                ((i >>> 8) & 0xff00) | (i >>> 24);
        return i;
    }


/*
        i = (i & 0x55555555) << 1 | (i >>> 1) & 0x55555555;
        i = (i & 0x33333333) << 2 | (i >>> 2) & 0x33333333;
        i = (i & 0x0f0f0f0f) << 4 | (i >>> 4) & 0x0f0f0f0f;
        i = (i << 24) | ((i & 0xff00) << 8) | ((i >>> 8) & 0xff00) | (i >>> 24);
        0x55555555=0101 0101 0101 0101 0101 0101 0101 0101
        0xAAAAAAAA=1010 1010 1010 1010 1010 1010 1010 1010
        0x33333333=0011 0011 0011 0011 0011 0011 0011 0011
        0xCCCCCCCC=1100 1100 1100 1100 1100 1100 1100 1100
        0x0f0f0f0f=0000 1111 0000 1111 0000 1111 0000 1111
        0xf0f0f0f0=1111 0000 1111 0000 1111 0000 1111 0000
        0xff00    =0000 0000 0000 0000 1111 1111 0000 0000
        以数字987654321的二进制是0011 1010 1101 1110 0110 1000 1011 0001为例
        ①x = (i & 0x55555555) <<  1 | (i & 0xAAAAAAAA) >>>  1;等价于i = (i & 0x55555555) << 1 | (i >>> 1) & 0x55555555
            (i & 0x55555555)
                00 11 10 10 11 01 11 10 01 10 10 00 10 11 00 01
               &
                01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01
               =00 01 00 00 01 01 01 00 01 00 00 00 00 01 00 01     两两分组，然后保留每组中的低1位
            (i & 0x55555555) << 1
                00 10 00 00 10 10 10 00 10 00 00 00 00 10 00 10     左移1位，为两两分组中每组的相邻1位的交换做准备
            (i & 0xAAAAAAAA)
                00 11 10 10 11 01 11 10 01 10 10 00 10 11 00 01
               &
                10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10
               =00 10 10 10 10 00 10 10 00 10 10 00 10 10 00 00     两两分组，然后保留每组中的高1位
            (i & 0xAAAAAAAA) >>>  1
                00 01 01 01 01 00 01 01 00 01 01 00 01 01 00 00     无符号右移1位，为两两分组中每组的相邻1位的交换做准备
            (i & 0x55555555) <<  1 | (i & 0xAAAAAAAA) >>>  1
                00 10 00 00 10 10 10 00 10 00 00 00 00 10 00 10
               |
                00 01 01 01 01 00 01 01 00 01 01 00 01 01 00 00
               =00 11 01 01 11 10 11 01 10 01 01 00 01 11 00 10     交换两两分组中每组中相邻的1位
       ②i = (i & 0x33333333) << 2 | (i & 0xCCCCCCCC)>>>2;等价于i = (i & 0x33333333) << 2 | (i >>> 2) & 0x33333333;
            (i & 0x33333333)
                0011 0101 1110 1101 1001 0100 0111 0010
               &
                0011 0011 0011 0011 0011 0011 0011 0011
               =0011 0001 0010 0001 0001 0000 0011 0010             四四分组，然后保留每组中的低2位
           (i & 0x33333333) << 2
                1100 0100 1000 0100 0100 0000 1100 1000             左移2位，为四四分组中每组的相邻2位的交换做准备
           (i & 0xCCCCCCCC)
                0011 0101 1110 1101 1001 0100 0111 0010
               &
                1100 1100 1100 1100 1100 1100 1100 1100
               =0000 0100 1100 1100 1000 0100 0100 0000             四四分组，然后保留每组中的高2位
           (i & 0xCCCCCCCC)>>>2
                0000 0001 0011 0011 0010 0001 0001 0000             无符号右移2位，为四四分组中每组的相邻2位的交换做准备
           (i & 0x33333333) << 2 | (i & 0xCCCCCCCC)>>>2
                1100 0100 1000 0100 0100 0000 1100 1000
               |
                0000 0001 0011 0011 0010 0001 0001 0000
               =1100 0101 1011 0111 0110 0001 1101 1000             交换四四分组中每组中相邻的2位
        ③i = (i & 0x0f0f0f0f) << 4 | (i & 0xf0f0f0f0) >>> 4;等价于i = (i & 0x0f0f0f0f) << 4 | (i >>> 4) & 0x0f0f0f0f;
            (i & 0x0f0f0f0f)
               11000101 10110111 01100001 11011000
              &
               00001111 00001111 00001111 00001111
              =00000101 00000111 00000001 00001000                  八八分组，然后保留每组中的低4位
            (i & 0x0f0f0f0f) << 4
               01010000 01110000 00010000 10000000                  左移4位，为八八分组中每组的相邻4位的交换做准备
            (i & 0xf0f0f0f0)
               11000101 10110111 01100001 11011000
              &
               11110000 11110000 11110000 11110000
              =11000000 10110000 01100000 11010000                  八八分组，然后保留每组中的高4位
           (i & 0xf0f0f0f0) >>> 4
               00001100 00001011 00000110 00001101                  无符号右移4位，为八八分组中每组的相邻4位的交换做准备
          (i & 0x0f0f0f0f) << 4 | (i & 0xf0f0f0f0) >>> 4
               01010000 01110000 00010000 10000000
              |
               00001100 00001011 00000110 00001101
              =01011100 01111011 00010110 10001101                  交换八八分组中每组中相邻的4位
       ④(i << 24) | ((i & 0xff00) << 8) | ((i >>> 8) & 0xff00) | (i >>> 24)
              (i << 24)
                  10001101 00000000 00000000 00000000               保留三十二位中的从左往右数第四个八位二进制10001101，保留在从左往右数第一个八位的位置
              ((i & 0xff00) << 8)
              (i & 0xff00)
                  01011100 01111011 00010110 10001101
                 &
                  00000000 00000000 11111111 00000000
                 =00000000 00000000 00010110 00000000
              (i & 0xff00) << 8
                  00000000 00010110 00000000 00000000               保留三十二位中的从左往右数第三个八位二进制00010110，保留在从左往右数第二个八位的位置
              ((i >>> 8) & 0xff00)
              (i >>> 8)
                 00000000 01011100 01111011 00010110
              ((i >>> 8) & 0xff00)
                 00000000 01011100 01111011 00010110
                &
                 00000000 00000000 11111111 00000000
                =00000000 00000000 01111011 00000000                保留三十二位中的从左往右数第二个八位二进制01111011，保留在从左往右数第三个八位的位置
              (i >>> 24)
                 00000000 00000000 00000000 01011100                保留三十二位中的从左往右数第一个八位二进制01011100，保留在从左往右数第四个八位的位置
              (i << 24) | ((i & 0xff00) << 8) | ((i >>> 8) & 0xff00) | (i >>> 24)
                 10001101 00000000 00000000 00000000
                |
                 00000000 00010110 00000000 00000000
                |
                 00000000 00000000 01111011 00000000
                |
                 00000000 00000000 00000000 01011100
                =10001101 00010110 01111011 01011100                将已经交换位置的八位二进制整合到一起
 */