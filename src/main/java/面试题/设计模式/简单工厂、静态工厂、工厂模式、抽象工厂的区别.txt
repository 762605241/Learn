简单工厂 只有一个工厂，所有产品都从这一个工厂中创建，根据不同参数，创建不同产品。通过判断区分不同产品。
工厂方法 只有一个工厂，只有一个抽象产品类，可以产生多个具体产品。即创建一种类型的不同型号产品。通过多态判断不同产品。
抽象工厂 有多个工厂，有多个抽象产品类，每个抽象产品类都可以产生多个具体产品。即创建多中类型不同型号产品。通过多态判断不同产品。可以理解为多个抽象工厂的组合。

工厂方法与抽象工厂的区别
	工厂方法 
		生产一个族，不同型号产品。
		通过工厂生成不同型号产品。
		从工厂中直接生成不同产品。
	抽象工厂
		生产多族，不同型号产品。
		生成具体某一族工厂，从某一族工厂中生成具体型号产品。
	
简单工厂模式的最大优点在于工厂类中包含了必要的逻辑判断，根据客户端的选择条件动态实例化相关的类。对于客户端来说，去除了与具体产品的依赖。如果需要增加类的创建，那么需要对工厂类中增加判断逻辑。违反了开闭原则。
工厂方法，当进行扩展时，仅需要增加具体产品以及对应的具体工厂即可。不需要修改原有代码逻辑。符合开闭原则。将判断逻辑从工厂中移动到客户端中，客户端决定创建某个工厂。
工厂方法就是简单工厂的进一步抽象，将具体工厂抽象出来。